##################
# Passing tests
##################

# Starting HTTP/2
generic/1

# Streams and multiplexing
generic/2

# Frame definitions
generic/3.1  # DATA
generic/3.2  # HEADERS
generic/3.3  # PRIORITY
generic/3.4  # RST_STREAM
generic/3.5  # SETTINGS
generic/3.7  # PING
generic/3.8  # GO_AWAY
generic/3.9  # WINDOW_UPDATE
generic/3.10 # CONTINUATION

# HTTP Message exchanges
# Only GET/HEAD are supported, but the server will
# correctly reply 501 to POST requests
generic/4

# HPACK
generic/5/1
generic/5/2
generic/5/3
generic/5/4
generic/5/5
generic/5/6
generic/5/7
generic/5/8
generic/5/9
generic/5/10
generic/5/11
generic/5/12
generic/5/13
generic/5/14
generic/5/15 # will fail if HEADER_TABLE_SIZE < 4096

# Starting HTTP/2
http2/3

# Frame Format
http2/4.1

# Frame Size
# http2/4.2/1 # fails because frame size is larger than read buffer
http2/4.2/2
http2/4.2/3

# Header Compression and Decompression
http2/4.3/1
http2/4.3/2
http2/4.3/3

# Stream states
http2/5.1/1
http2/5.1/2
http2/5.1/3
http2/5.1/4
http2/5.1/5
http2/5.1/6
http2/5.1/7
http2/5.1/8
http2/5.1/9
# http2/5.1/10 # fails because h2spec sends a 4k continuation header
http2/5.1/11
http2/5.1/12
# http2/5.1/13 # fails because h2spec sends a 4k continuation header
http2/5.1.1
http2/5.1.2

# Stream priority
# http2/5.3 # fails because PRIORITY frames are ignored

# Error handling
http2/5.4

# Extending http/2
http2/5.5

# Frame definitions: DATA
http2/6.1

# Frame definitions: HEADERS
http2/6.2

# Frame definitions: PRIORITY
# http2/6.3 # fails because PRIORITY frames are ignored

# Frame definitions: RST_STREAM
http2/6.4

# Frame definitions: SETTINGS
http2/6.5 # 6.5.3/1 will fail unless HTTP2_MAX_CLIENTS > 1

# Frame definitions: PING
http2/6.7

# Frame definitions: WINDOW_UPDATE
http2/6.9/1
http2/6.9/2
http2/6.9/3
http2/6.9.1 # 6.9.1/1 and 6.9.1/2 will fail unless HTTP2_MAX_CLIENTS > 1

# h2spec http2/6.9.2 maintains multiple open clients
# making the implementation reach its limit. For this reason they
# are tested independently here
http2/6.9.2/1 # will fail unless HTTP2_MAX_CLIENTS > 1
http2/6.9.2/2 # will fail unless HTTP2_MAX_CLIENTS > 1
http2/6.9.2/3

# Frame definitions: CONTINUATION
# http2/6.10/1 # fails because frame size is larger than read buffer
http2/6.10/2
http2/6.10/3
http2/6.10/4
http2/6.10/5
http2/6.10/6

# Error codes
http2/7

# HTTP Message exchanges
http2/8.1/1
# http2/8.1.2/1 # ignored by the implementation to avoid overhead
# http2/8.1.2.1 # ignored by the implementation to avoid overhead
http2/8.1.2.2
http2/8.1.2.3
# http2/8.1.2.6 # ignored by the implementation (POST is not supported)

# Server Push
http2/8.2

# HPACK: Header Compression for HTTP/2
hpack
