# General test configuration variables
TEST_SUBDIRS = unity/
TEST_PREREQS = unity.o
TEST_CFLAGS = -Wno-unused-parameter
TEST_LDFLAGS = --coverage
TEST_SRC_CFLAGS = -fprofile-arcs -ftest-coverage

# Target specific configurations
$(TEST_BUILD)/test_headers: CFLAGS += -DCONF_MAX_HEADER_NAME_LEN=8 -DCONF_MAX_HEADER_VALUE_LEN=16
$(TEST_BUILD)/test_hpack_tables: CFLAGS += -DCONF_MAX_HEADER_NAME_LEN=30 -DCONF_MAX_HEADER_VALUE_LEN=20

# Test formatting variables
null :=
space = $(null) $(null)
nl := \n

PASSED = $(shell grep -s PASS $(TEST_BUILD)/*.txt)
PASSED_COUNT = $(words $(PASSED))
FAIL = $(shell grep -s FAIL $(TEST_BUILD)/*.txt)
FAIL_COUNT = $(words $(FAIL))
IGNORE = $(shell grep -s IGNORE $(TEST_BUILD)/*.txt)
IGNORE_COUNT = $(words $(IGNORE))

# Ignore the following files
TEST_SRC_IGNORE = hpack/hpack.c dos.c

# We need a test for each library source
RESULTS = $(patsubst %.c,$(TEST_BUILD)/test_%.txt,$(subst /,_,$(filter-out $(TEST_SRC_IGNORE),$(LIBRARY_SOURCES))))

test: $(RESULTS)
	@echo -e "-----------------------\nIGNORES: $(IGNORE_COUNT)\n-----------------------"
	@echo -e "$(subst $(space),$(nl),$(IGNORE))"
	@echo -e "-----------------------\nFAILURES: $(FAIL_COUNT)\n-----------------------"
	@echo -e "$(subst $(space),$(nl),$(FAIL))"
	@echo -e "-----------------------\nPASSED: $(PASSED_COUNT)\n-----------------------"
	@echo -e "$(subst $(space),$(nl),$(PASSED))"
	@echo -e "\n$(if $(FAIL),FAILED,OK)"
	@test -z "$(FAIL)"

# Build results
$(TEST_BUILD)/test_%.txt: $(TEST_BUILD)/test_%
	@echo "$< > $@"
	@-trap '$(RM) $@' INT; $< > $@
	@test -s $@ || ($(RM) $@ && false)  # if file size is zero then an error ocurred before the redirection

