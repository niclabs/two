Generic:
1. Starting HTTP2: pasa sin errores de HTTP2, se cae por socket al no leer nada. Se cae el servidor.
2.2 Window Update: pasa, recibe los frames sin problemas. El servidor no se cae.
3.1 Data: 1: Sends data frame. Pasa, servidor no se cae.
          2: Pasa, servidor no se cae

          1. Starting HTTP/2
              1: Sends a client connection preface: pasa sin errores de H2, se cae por socket al no leer nada. Se cae servidor.

            2. Streams and Multiplexing
              1: Sends a PRIORITY frame on idle stream
              2: Sends a WINDOW_UPDATE frame on half-closed (remote) stream: pasa, servidor no se cae.
              3: Sends a PRIORITY frame on half-closed (remote) stream
              4: Sends a RST_STREAM frame on half-closed (remote) stream
              5: Sends a PRIORITY frame on closed stream

            3. Frame Definitions
              3.1. DATA
                1: Sends a DATA frame: pasa, servidor no se cae.
                2: Sends multiple DATA frames: pasa, servidor no se cae.
                3: Sends a DATA frame with padding: error al recibir DATA, padding no implementado (frames.c 610). Servidor intenta mandar goaway a pesar de codigo de error de http2. El servidor no se cae

              3.2. HEADERS
                1: Sends a HEADERS frame: pasa, el servidor no se cae.
                2: Sends a HEADERS frame with padding: error de compresion. El servidor no se cae.
                3: Sends a HEADERS frame with priority

              3.3. PRIORITY
                1: Sends a PRIORITY frame with priority 1
                2: Sends a PRIORITY frame with priority 256
                3: Sends a PRIORITY frame with stream dependency
                4: Sends a PRIORITY frame with exclusive
                5: Sends a PRIORITY frame for an idle stream, then send a HEADER frame for a lower stream ID

              3.4. RST_STREAM
                1: Sends a RST_STREAM frame

              3.5. SETTINGS
                1: Sends a SETTINGS frame: pasa, el servidor no se cae.

              3.7. PING
                1: Sends a PING frame

              3.8. GOAWAY
                1: Sends a GOAWAY frame: no pasa y pasa, h2spec espera Connection closed o PING. Servidor env√≠a GOAWAY. Servidor no se cae.

              3.9. WINDOW_UPDATE
                1: Sends a WINDOW_UPDATE frame with stream ID 0: Se cae por aumento de window ilegal.
                2: Sends a WINDOW_UPDATE frame with stream ID 1

              3.10. CONTINUATION
                1: Sends a CONTINUATION frame: pasa, el servidor no se cae
                2: Sends multiple CONTINUATION frames: pasa, el servidor no se cae

            4. HTTP Message Exchanges
              1: Sends a GET request
              2: Sends a HEAD request
              3: Sends a POST request
              4: Sends a POST request with trailers: pasa todo, no se cae el servidor.

            5. HPACK
              1: Sends a indexed header field representation
              2: Sends a literal header field with incremental indexing - indexed name
              3: Sends a literal header field with incremental indexing - indexed name (with Huffman coding)
              4: Sends a literal header field with incremental indexing - new name
              5: Sends a literal header field with incremental indexing - new name (with Huffman coding)
              6: Sends a literal header field without indexing - indexed name
              7: Sends a literal header field without indexing - indexed name (with Huffman coding)
              8: Sends a literal header field without indexing - new name
              9: Sends a literal header field without indexing - new name (huffman encoded)
              10: Sends a literal header field never indexed - indexed name
              11: Sends a literal header field never indexed - indexed name (huffman encoded)
              12: Sends a literal header field never indexed - new name
              13: Sends a literal header field never indexed - new name (huffman encoded)
              14: Sends a dynamic table size update
              15: Sends multiple dynamic table size update
